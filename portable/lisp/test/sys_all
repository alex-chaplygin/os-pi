echo "------------SYSTEM TEST-------------------"
sh sys_test "\"\xFFF\"" "\"\xFFF\"
invalid symbol in string
\"\xFFF\"

expected \" at string end"
#Проверка точечной пары
sh sys_test "'(1 . 1)" "(1 . 1)"
#Тест для самого большого числа int
sh sys_test "2147483647" "2147483647"
##Тест для самого большого числа int+1
sh sys_test "2147483648" "2147483648
number overflow"
#самого маленького int
sh sys_test "-2147483648" "-2147483648"
#самого маленького int-1
sh sys_test "-2147483649" "-2147483649
number overflow"
#функция
sh sys_test "#'(lambda (x) (+ x 1))" "(LAMBDA (X) ((+ X 1)))"
# вместо функции число
sh sys_test "(5 5)" "not function"
# вместо функции символ
sh sys_test '(#\\5 5)' "not function"

echo "---Тесты PARSER ---"
#PARSER 2 Неправильный символ
sh sys_test "~" "~
invalid symbol"
#PARSER 6 список без закрывающей скобки
sh sys_test "(a b c" "(a b c

expected )"
#PARSER 8 пустой список без открывающей скобки
sh sys_test ")" ")
invalid expression"
sh sys_test "((a b (1 2) e f)" "((a b (1 2) e f)

expected )" #10
sh sys_test "((a b #(1 #(2 (3 4) 5)) c d )" "((a b #(1 #(2 (3 4) 5)) c d )

expected )" #11
sh sys_test "#(1 #(2 3) 4)" "#(1 #(2 3) 4)" # 20
sh sys_test "#\\1" "#\\1"
sh sys_test "1.25" "1.250000"
sh sys_test "'(1.25 1.82 3.56 6.12 2 5.77 )" "(1.250000 1.820000 3.560000 6.120000 2 5.770000)"
sh sys_test "'(1.23333)" "(1.233330)"

echo "---Тесты ATOM---"
sh sys_test "(atom 'a)" "T" # 2
sh sys_test "(atom 10)" "T" # 1
sh sys_test "(atom '(a b c))" "NIL" # 7
sh sys_test "(atom '())" "T" # 7
sh sys_test "(atom (atom 'a))" "T" # 7
sh sys_test "(atom '(atom 'a))" "NIL" # 7
sh sys_test "(atom )" "atom: no args" # 52 54
sh sys_test "(atom 'a 'd)" "atom: many args" # 131
sh sys_test "(atom \"abc\")" "T" # 3
sh sys_test "(atom #(1 2 3 4))" "T" # 4

echo "---Тесты QUOTE---"
sh sys_test "'a" "A" # 5 6
sh sys_test "'()" "NIL"
sh sys_test "(quote())" "NIL"
sh sys_test "(quote a b)" "quote: many args" #53

echo "---Тесты BACKQUOTE---"
sh sys_test "\`(,@())" "NIL" #43 48
sh sys_test "(setq y 3)
   	    	  \`(x ,y \`(a ,b))" "3
(X 3 (BACKQUOTE (A (COMMA B))))" # 25 26 27 43 45
sh sys_test "(setq abc '(a b c))
(setq a 9)
\`(1 (comma-at abc) ((comma a)) \"a\" #(1 (comma a) 2))" "(A B C)
9
(1 A B C (9) \"a\" #(1 9 2))" # 25 26 27 49 45
sh sys_test "\`y" "Y" #42
sh sys_test "\` " "\` 
quote: no args" #115
sh sys_test "\`5" "5" #116
sh sys_test "\`#(1 2 3 4)" "#(1 2 3 4)" #117
sh sys_test "\`\"A\"" "\"A\"" #118
sh sys_test "\`('(comma (setq a 1)))" "((QUOTE 1))"
# COMMA как символ
sh sys_test "\`(= a 'COMMA)" "(= A (QUOTE COMMA))"
# COMMA внутри COMMA
sh sys_test "\`(1 ,(+ 1 ,(+ 2 3))) " "Unknown func: COMMA"
# COMMA внутри COMMA_AT
sh sys_test "\`(1 ,@(cons ,(+ 2 3) nil)) " "ERROR: comma inside comma-at"

echo  "---Тесты IF---"
# выражение истино
sh sys_test "(if (equal 2 2) 3 2)" "3"
# выражение ложно
sh sys_test "(if (equal 2 3) 3 2)" "2"
# лишний аргумент
sh sys_test "(if (equal 2 3) 3 2 1)" "if: too many params"
#отсутствует условие
sh sys_test "(if )" "NULLOBJ in IF"
#отсутствует выражение при истине
sh sys_test "(if (equal 2 3))" "True is empty"
#отсутствует выпажение при лжи
sh sys_test "(if (equal 2 3) 3)" "False is empty"


echo "---Тесты car ---"
sh sys_test "(car '(a b c))" "A" #10
sh sys_test "(car \"fafaf\")" "Not list in car" #58
sh sys_test "(car)" "car: No args" #59
sh sys_test "(car nil)" "car: Empty list" #59
sh sys_test "(car '(a b c) '(n h r))" "car: Too many args" #60
		   
echo "---Тесты cdr ---"
sh sys_test "(cdr '(a b c))" "(B C)" #11
sh sys_test "(cdr \"dsfsd\")" "cdr: Not list in cdr" #61
sh sys_test "(cdr)" "cdr: No args" #62
sh sys_test "(cdr nil)" "cdr: Empty list" #62
sh sys_test  "(cdr '(a b c) '(d e f))" "cdr: Too many args" #63 

echo "---Тесты lambda ---"
sh sys_test "((lambda (x y) (cons x y)) 1 '(2))" "(1 2)" # 14 125
sh sys_test "((lambda (x y) (cons x y) (cons y x)) 1 '(2))" "((2) . 1)" #15

sh sys_test "((lambda ) 1 2)" "Invalid lambda function" #70
sh sys_test "((lambda (x y) (cons x y)) )" "Not enough values for params" #71 72
sh sys_test "((lambda (x y) (cons x y)) 1)" "Not enough values for params" #72
sh sys_test "((lambda (x y)) 1 '(2))" "Invalid lambda function" #73
sh sys_test "((lambda () nil))" "NIL"


sh sys_test "(defun null (x) (eq x (quote())))\
(null 'a) (null (quote ())) (null '())" "NULL
NIL
T
T" # 18
sh sys_test "(defun f(x)\
         (if \
            (equal x 1) 1 \
            (* x (f (- x 1)))))\
         (f 8) (f 3) (f 8) (f 9) (f 10) (f 10) (f 11)" "F
40320
6
40320
362880
3628800
3628800
39916800" # 18
# обработка отрицательного числа
sh sys_test "-143" "-143"
# обработка строки со знаком "-"
sh sys_test "\"-test\"" "\"-test\""
sh sys_test "(+ 1 2 3 4)" "10"
sh sys_test "(+ 1.25 3.11)" "4.360000"
sh sys_test "(+ 1.25 3.11 2.05)" "6.410000"
sh sys_test "(+ 1 2 3.11 2.25)" "8.360000"
sh sys_test "(+ 1 2 3.11 2 2.25)" "10.360000"
sh sys_test "(+ 1 2 3.11 2 \"\")" "add: Not number"
sh sys_test "(+ 'b 2)" "add: Not number"

sh sys_test "(+ 1 2 3 5)" "11"
sh sys_test "(- 9 5 1 1)" "2"
sh sys_test "(+ 1 0.25)" "1.250000"

sh sys_test "(- 5 2.5)" "2.500000"
sh sys_test "(- 10 1.35 5 2.3)" "1.350000"
sh sys_test "(- 10.1 2)" "8.100000"
sh sys_test "(- 10.1 2 \"\")" "sub: Not number"
sh sys_test "(- 'b 2)" "sub: Not number"
sh sys_test "(- 2)" "-2"
sh sys_test "(setq x 1) (- x)" "-1"

sh sys_test "(* 123 123 0 421)" "0"
sh sys_test "(* 9 5 1 1)" "45"
sh sys_test "(* 5 2.5)" "12.500000"
sh sys_test "(* 10 1.35 5 2.3)" "155.250000"
sh sys_test "(* 10.1 2)" "20.200001"
sh sys_test "(* 10.1 2.25 3.5)" "79.537498"
sh sys_test "(* 10.1 2 \"\")" "mul: Not number"
sh sys_test "(* 1 2 3 5)" "30"
sh sys_test "(* 'b 2)" "mul: Not number"

sh sys_test "(/ 30 2)" "15"
sh sys_test "(/ 30 0)" "div: divisor = 0"
sh sys_test "(/ 19 3)" "6"
sh sys_test "(/ 30.5 0.5)" "61.000000"
sh sys_test "(/ 30 1.5)" "20.000000"
sh sys_test "(/ 'b 2)" "div: Not number"

sh sys_test "(> 1 2)" "NIL"
sh sys_test "(> 3 2)" "T"
sh sys_test "(> 3 3)" "NIL"
sh sys_test "(< 1 2)" "T"
sh sys_test "(< 3 2)" "NIL"
sh sys_test "(< 3 3)" "NIL"
sh sys_test "(progn (+ 2 3) (* 3 4))" "12"
sh sys_test "(defun test (x) (+ x 10) (* x 20)) (test 5)" "TEST
100" # 18
sh sys_test "(setq a 10) (A)A" "10
Unknown func: A
10" # 23 24
sh sys_test "(setq  a 10) A" "10
10" # 23 24
sh sys_test "T NIL" "T
NIL"
sh sys_test "(setq +bgr-index+ 0x1ce) \
(setq +bgr-data+ 0x1cf) +BGR-INDEX+ +BGR-DATA+ X ABC" "462
463
462
463
Unknown SYMBOL: X
Unknown SYMBOL: ABC" # 23
sh sys_test "\"a b c d\"" "\"a b c d\""
sh sys_test "(setq test 200) test" "200
200" # 25 26 
sh sys_test "(defun bgr-out (reg data)\
  \"Запись регистра видео\"\
  (+ 0 reg)\
  (+ 1 data))\
\
(defun bgr-set-res (width height depth)\
  \"Установка разрешения экрана\"\
  (bgr-out 3 0)\
  (bgr-out 4 width)\
  (bgr-out 1 height)\
  (bgr-out 5 depth)\
  (bgr-out 3 1))\
\
(bgr-set-res 320 200 8)\
\
(defun graph-send-buffer (a) nil)\
\
(graph-send-buffer \"1234567890q\" )" "BGR-OUT
BGR-SET-RES
2
GRAPH-SEND-BUFFER
NIL" # 18
sh sys_test "(setq str  \"1234567890111111qwertyu\\nuiop111\\n1111111111111111\\nqqqqqqqqqqqqqqqqqqqq\\nqqqqqqqqqqqqqqqqqqqqq\\nwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\") str" "\"1234567890111111qwertyu
uiop111
1111111111111111
qqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqq
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\"
\"1234567890111111qwertyu
uiop111
1111111111111111
qqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqq
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\"" # 23
sh sys_test "(setq a 1 b 2 c 3)a b c" "3
1
2
3" # 25 26 27
sh sys_test "(setq a 1 b)" "setq: no value" # 25 27 87
sh sys_test "(setq a #(1 2 3)) a" "#(1 2 3)
#(1 2 3)" # 23 24 
sh sys_test "(setq a #(1 #(a b c) 2 3)) a" "#(1 #(A B C) 2 3)
#(1 #(A B C) 2 3)" # 23 24
sh sys_test "\`(1 2 3 4)" "(1 2 3 4)"
sh sys_test "\`(A B C D 1 2 3 4)" "(A B C D 1 2 3 4)"
sh sys_test "\`((1) 2 3 (A B) (C ABC)  4)" "((1) 2 3 (A B) (C ABC) 4)"
sh sys_test "\`a" "A"
sh sys_test "\`(\"abcdefg\")" "(\"abcdefg\")"
sh sys_test "\`#(1 2 3 4)" "#(1 2 3 4)"
sh sys_test "\`(#(1 2 (3) 4 b #(b c)) a (1) \"ab\")" "(#(1 2 (3) 4 B #(B C)) A (1) \"ab\")"
sh sys_test "(setq x 1) \`(a ,x 2)" "1
(A 1 2)" # 23 24
sh sys_test "(setq x 1) (setq y \`(,x a b)) \`(a ,x 2 ,y)" "1
(1 A B)
(A 1 2 (1 A B))" # 23 24
sh sys_test "(setq x 1) \`(a ,x (,x #(,x)) 2)" "1
(A 1 (1 #(1)) 2)" # 23 24
sh sys_test "(setq a '(1 2 3 (4 5))) \`(b ,@a c)" "(1 2 3 (4 5))
(B 1 2 3 (4 5) C)" # 23 24
sh sys_test "(defmacro macro (x) 
                 \`(+ ,x 1))
             (setq a 4)
             (macro a)" "MACRO
4
5" # 41 23 24
sh sys_test "(defmacro if (test true false) 
                 \`(cond (,test ,true)
                         (t ,false)))
             (setq a 4)
             (if (equal a 4) 
                 (+ a 1)
                 (- a 1))" "IF
4
5" # 41 23 24
sh sys_test "(defmacro macro (x) 
                 \`(+ ,x 1)\`(* ,x 2))
             (setq a 4)
             (macro a)" "MACRO
4
8" # 41 23 24
sh sys_test "(concat \"for-\" (symbol-name 'var))" "\"for-VAR\"" # 28 29
sh sys_test "\`(,(concat \"for-\" (symbol-name 'var)))" "(\"for-VAR\")" # 28 29
sh sys_test "
(setq x 10)
(defun change-local-x (x)
(setq x 5) x) 
(change-local-x x) 
x" "10
CHANGE-LOCAL-X
5
10" # 23 24 18 26 27

sh sys_test "(defmacro testrest (&rest args) args)
(testrest)" "TESTREST
NIL"

echo "---Тесты точечных пар----"
sh sys_test "'(4 . 5)" "(4 . 5)"
sh sys_test "'(4 .(3 .(5 .())))" "(4 3 5)"
sh sys_test "'(4 .5"  "'(4 .5

expected )"

echo "---Тесты EQ----"
#случай число FALSE
sh sys_test "(eq 1 1)" "T"
#случай символ TRUE
sh sys_test "(eq 'a 'a)" "T"
#случай символ FALSE
sh sys_test "(eq 'a 'b)" "NIL" # 9
#случай отстутствие аргументов
sh sys_test "(eq)" "eq: no args" # 55
#случай больше двух аргументов 
sh sys_test "(eq 1 2 3)" "eq: too many args" # 56
#случай  1 аргумент
sh sys_test "(eq 'g)" "eq: one arg"  # 57

echo "---Тесты EQUAL----"
# случай число TRUE
sh sys_test "(equal 1 1)" "T"
# случай символ TRUE
sh sys_test "(equal 'v 'v)" "T"
# случай число FALSE
sh sys_test "(equal 3 1)" "NIL"
# случай символ FALSE
sh sys_test "(equal 'c 'x)" "NIL"
# случай строки TRUE
sh sys_test "(equal \"vvv\" \"vvv\")" "T"
# случай строки FALSE
sh sys_test "(equal \"vbv\" \"vvv\")" "NIL"
# случай списка TRUE
sh sys_test "(equal '(a b c) '(a b c))" "T"
sh sys_test "(equal '(a (b (c))) '(a (b (c))))" "T"
# случай списка FALSE
sh sys_test "(equal '(a 1 c) '(a b c))" "NIL"
sh sys_test "(equal '(a c) '(a b c))" "NIL"
sh sys_test "(equal '(a c c) '(a b))" "NIL"
sh sys_test "(equal #(1 2 a) #(1 2 a))" "T"
sh sys_test "(equal #(1 2 a) #(1 b a))" "NIL"
# ошибка - нет аргументов
sh sys_test "(equal)" "equal: no arguments"
# ошибка - нет второго аргумента
sh sys_test "(equal 1)" "equal: no second argument"
# ошибка - более двух аргументов
sh sys_test "(equal 1 2 3)" "equal: too many arguments"
sh sys_test "(putchar #\\F)" "FNIL"
sh sys_test "(putchar #\\ )" " NIL"
sh sys_test "(putchar \"1 2 3\")" "PUTCHAR: not a char"

echo "---Тесты INTERN---"
#аргумент строка
sh sys_test "(intern \"F\")" "F" #30
# отсутствие аргументов
sh sys_test "(intern )" "intern: no arguments" #91
# аргумент не строка
sh sys_test "(intern 1)" "intern: not string in params" #92
# больше одного аргумента
sh sys_test "(intern 'a 'd)" "intern: not string in params" #93

echo "---Тесты STRING-SIZE---"
#отсутствие аргументов
sh sys_test "(string-size)" "string-size: no arguments"
#больше 1 аргумента
sh sys_test "(string-size \"1 2 3\" \"abc\")" "string-size: too many arguments"
#аргумент не строка
sh sys_test "(string-size 1)" "string-size: not string in params"
#аргумент строка
sh sys_test "(string-size \"123 a\")" 5
#аргумент пустая строка
sh sys_test "(string-size \"\")" 0
sh sys_test "(string-size \"test 12 test test\")" 17

echo "---Тесты STR-CHAR---"
sh sys_test "(char \"0\" 0)" "#\\0"
sh sys_test "(char \"4321\" 3)" "#\\1"
sh sys_test "(char \"\" 0)" "str-char: invalid index"
sh sys_test "(char \"abc\" 4)" "str-char: invalid index"
sh sys_test "(char 'abc 4)" "str-char: not string in params"
sh sys_test "(char \"0\")" "str-char: not all arguments"
sh sys_test "(char \"abc\" 'a)" "str-char: not number in params"
sh sys_test "(char \"abc\" 4 5)" "str-size: too many arguments"

echo "---Тесты SUBSEQ---"
#Отсутствие аргументов
sh sys_test "(subseq)" "subseq: no arguments"
#Недостаточно аргументов
sh sys_test "(subseq \"tst\")" "subseq: not all arguments"
sh sys_test "(subseq \"tst\" 1)" "subseq: not all arguments"
#Больше 3 аргументов
sh sys_test "(subseq \"tst\" 0 2 4)" "subseq: too many arguments"
#Некорректные аргументы
sh sys_test "(subseq 123 \"tst\" 1)" "subseq: invalid args"
sh sys_test "(subseq \"tst\" 'f 6)" "subseq: invalid args"
sh sys_test "(subseq \"tst\" 0 'g)" "subseq: invalid args"
#Стартовый индекс больше конечного
sh sys_test "(subseq \"Hello\" 3 1)" "subseq: invalid index"
#Стартовый индекс выходит за пределы строки
sh sys_test "(subseq \"Test\" 4 5)" "subseq: invalid index"
#Конечный индекс выходит за пределы строки
sh sys_test "(subseq \"Test\" 0 5)" "subseq: invalid index"
#Отрицательный индекс
sh sys_test "(subseq \"Test\" -1 2)" "subseq: index can not be negative"
#Корректные аргументы
sh sys_test "(subseq \"Hello, world!\" 7 13)" "\"world!\""
sh sys_test "(subseq \"Hello, world!\" 7 7)" "\"\""
sh sys_test "(subseq \"Hello, world!\" 0 7)" "\"Hello, \""

echo  "---Тесты SETA---"
# три аргумента
sh sys_test "(seta #(1 2 3 4) 0 10)" "#(10 2 3 4)"  #35 36 37
# отсутствие аргументов
sh sys_test "(seta  )" "seta: invalid arguments" #99
# >3 аргументов
sh sys_test "(seta #(1 2 3 4) 1 2 4)" "seta: many args" #100
# без значения
sh sys_test "(seta #(1 2 3 4) 1)" "seta: invalid arguments"
# <3 аргументов
sh sys_test "(seta #(1 2 3 4))" "seta: invalid arguments" #101
# второй аргумент не число
sh sys_test "(seta #(1 2 3 4) 'd 10)" "seta: index out of range" #102
# первый аргумент не объект массив
sh sys_test "(seta 2 1 1)" "seta: not array" #103

echo  "---Тесты INTTOSTR---"
# отсутствие аргументов
sh sys_test "(inttostr)" "inttostr: no args"
sh sys_test "(inttostr 1 2)" "inttostr: many args"
sh sys_test "(inttostr 'a)" "inttostr: invalid arg"
# аргумент - число
sh sys_test "(inttostr 234)" "\"234\""
sh sys_test "(inttostr -234)" "\"-234\""
sh sys_test "(inttostr 0)" "\"0\""

echo  "---Тесты CODE-CHAR---"
sh sys_test "(code-char 0x20)" "#\\ "
sh sys_test "(code-char 0x39)" "#\9"
sh sys_test "(code-char)" "code-char: invalid arguments number"
sh sys_test "(code-char 1 2)" "code-char: invalid arguments number"
sh sys_test "(code-char 'a)" "code-char: not number in params"

echo  "---Тесты AREF---"
# два аргумента
sh sys_test "(aref #(1 2 3 4) 1)" 2  #38
# первый аргумент объект массив
sh sys_test "(aref #(1 2 3 4) 1)" 2  #39
# второй аргумент число 
sh sys_test "(aref #(1 2 3 4) 1)" 2  #40
# отсутствие аргументов
sh sys_test "(aref  )" "aref: invalid arguments" #104
# >2 аргументов
sh sys_test "(aref #(1 2 3 4) 1 2 )" 2 #105
# <2 аргументов
sh sys_test "(aref #(1 2 3 4))" "aref: invalid arguments" #106
# второй аргумент не число
sh sys_test "(aref #(1 2 3 4) 'd)" "aref: index should be a number" #107
# первый аргумент не объект массив
sh sys_test "(aref 2 1)" "aref: not an array" #108

echo "---Тесты FUNCALL---"
# аргумент - ламбда-функция
sh sys_test "(funcall #'(lambda (x) (+ x 1)) 2)" "3" # 14 125
# аргумент - встроенная функция "+"
sh sys_test "(funcall #'+ 1 2 3 4 5)" "15"
# аргумент - встроенная функция "car"
sh sys_test "(funcall #'car '(a b c))" "A" # 10
# аргумент - пользовательская функция
sh sys_test "(defun tfun (x y) (* (+ x 1) y))
(funcall #'tfun 2 3)" "TFUN
9" # 18
# аргумент отсутствует
sh sys_test "(funcall)" "funcall: no arguments"
# неправильный аргумент - пустой список
sh sys_test "(funcall ())" "funcall: invalid func"
# неправильный аргумент - число
sh sys_test "(funcall 1)" "funcall: invalid func"
# неправильный аргумент - nil
sh sys_test "(funcall nil)" "funcall: invalid func"
# ошибка - аргументов больше параметров
sh sys_test "(defun tfun (x y) (+ x y))
(funcall #'tfun 2 3 4)" "TFUN
Invalid number of arguments"
# ошибка - параметров больше аргументов
sh sys_test "(defun tfun (x y) (+ x y))
(funcall #'tfun 2)" "TFUN
Not enough values for params"
# объединение остаточных параметров в список, используя &rest
sh sys_test "(defun test (a &rest b) b)
(funcall #'test 1 2 3 4)" "TEST
(2 3 4)" # 18
# ошибка - отсутсвует параметр после &rest
sh sys_test "(defun test (a &rest) b)
(funcall #'test 1 2 3 4)" "TEST
Missing parameter after &rest" # 18
# ошибка - лишний параметр после &rest b
sh sys_test "(defun test (a &rest b c) b)
(funcall #'test 1 2 3 4)" "TEST
Too many parameters after &rest" # 18

echo "---Тесты PREDICATES---"
# тест функции symbolp без параметров
sh sys_test "(symbolp)" "symbolp: no params"
# тест функции с неверным параметром
sh sys_test "(symbolp 1)" "NIL"
# тест функции с верным параметром
sh sys_test "(symbolp 'a)" "T"
# тест с двумя параметрами
sh sys_test "(symbolp 'a 'b)" "symbolp: many params"
sh sys_test "(integerp 125)" "T"

echo "---Тест ERROR---"
sh sys_test "(progn 1 2 3 (error \"e\") 4 5 6)" "ERROR: \"e\""

echo "---Тесты CATCH---"
sh sys_test "(CATCH)" "catch: no arguments"
sh sys_test "(CATCH 'A)" "NIL"
sh sys_test "(CATCH 'A 1 2 3)" "3"

echo "---Тесты PROGN---"
sh sys_test "(PROGN)" "NIL"
sh sys_test "(a . 1)" "arguments are not list"

echo "---Тесты TAGBODY---"
sh sys_test "(tagbody (setq v 10) (go b) (setq v 20) a )" "tagbody: label B not found"
sh sys_test "(tagbody (go) (setq v 20) a )" "go: no label"
sh sys_test "(tagbody (setq v 10) (go a) (setq v 20) a ) v" "NIL
10"
sh sys_test "
(tagbody
	(setq i 0)
	(setq a 0)
	(go test)
	loop
	(setq i (+ i 1))
	(setq a (+ a 10))
	test
	(if (equal i 10) nil (go loop))) a" "NIL
100"

sh sys_test "
(tagbody
       (setq i 0)
       
       (setq a 0)
       (go test)
       loop
       (setq i (+ i 1))
       (tagbody
              (setq g 0)
              (go inside)
              loopins
              (setq g (+ g 1))
              (setq a (+ a 1))
              inside
              (if (equal g 10) nil (go loopins)))
       test
       (if (equal i 10) nil (go loop))) a" "NIL
100"

echo "---Тесты LABELS---"
sh sys_test "(labels ((func (x) x) (func2 (y) y)) (func 1) (func2 2))" "2"
# нет параметров
sh sys_test "(labels)" "labels: no parameters"
# элемент списка функций не пара
sh sys_test "(labels (x) x)" "labels: invalid function"
# элемент списка функций не пара
sh sys_test "(labels (f x) x)" "labels: invalid function"
# элемент списка функций содержит второй элемент - не список параметров 
sh sys_test "(labels ((f x)) x)" "labels: invalid function"

echo "---Тесты SIN, COS ---"
sh sys_test "(sin 0.0)" "0.000000"
sh sys_test "(cos 3.14159)" "-1.000000"
sh sys_test "(cos 0.0)" "1.000000"

echo "---Тесты ROUND ---"
sh sys_test "(round 1.3)" "1"
sh sys_test "(round 2.5)" "3"

echo "---Тесты SYMBOL-FUNCTION ---"
sh sys_test "(symbol-function (intern (concat \"C\" \"AR\")))" "(Function NIL NIL 4ff2b0)"
