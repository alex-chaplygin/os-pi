#(1 13 0 2 6 0 10 0 1 10 18 9 13 1 7 0 3 6 1 13 1 11 6 0 10 18 0 10 18 0 13 1 14 6 0 10 18 1 10 18 0 10 18 0 13 1 11 6 0 10 18 1 10 18 0 13 1 11 6 0 10 18 1 10 18 0 13 1 14 6 0 10 18 1 10 18 1 10 18 0 13 1 14 6 0 10 18 1 10 18 1 10 18 0 13 1 17 6 0 10 18 1 10 18 1 10 18 1 10 18 0 13 1 17 6 0 10 18 1 10 18 1 10 18 1 10 18 0 13 1 20 6 0 10 18 1 10 18 1 10 18 1 10 18 1 10 18 0 13 1 20 6 0 10 18 1 10 18 1 10 18 1 10 18 1 10 18 0 13 1 14 6 0 10 18 0 10 18 1 10 18 0 13 1 11 6 0 10 18 0 10 18 1 13 1 14 6 0 10 18 1 10 18 0 10 18 1 13 1 11 6 0 10 18 1 10 18 1 13 1 14 6 0 10 18 1 10 18 1 10 18 1 13 1 17 6 0 10 18 1 10 18 1 10 18 1 10 18 1 13 1 29 0 4 6 0 10 0 5 10 18 12 2 14 0 5 10 6 0 10 11 1 19 1 1 4 6 0 13 1 21 0 6 6 0 10 4 1 10 18 9 2 6 4 0 1 4 4 1 13 1 28 14 4 1 23 8 1 0 10 8 1 1 10 6 0 10 11 1 19 8 10 11 1 19 8 13 13 1 21 0 7 6 0 10 6 1 10 18 8 10 0 8 10 11 2 19 4 13 1 146 0 9 0 10 0 11 0 12 0 13 0 14 6 0 10 18 34 10 15 16 0 3 1 12 -93 17 2 6 4 0 1 15 0 14 6 0 10 15 16 0 3 1 12 -391 17 2 11 0 15 10 11 1 19 10 1 4 4 1 6 0 10 18 0 10 0 16 10 18 9 2 29 4 0 10 6 0 10 15 16 0 3 1 12 -386 17 10 11 2 15 16 0 3 1 12 -429 17 1 47 0 17 10 6 0 10 18 0 10 6 1 10 11 3 15 16 0 3 1 12 -453 17 10 6 0 10 15 16 0 3 1 12 -433 17 10 11 2 15 16 0 3 1 12 -476 17 13 1 51 0 18 6 0 10 15 16 0 3 1 12 -505 17 2 6 4 1 1 31 6 0 10 15 16 0 3 1 12 -502 17 10 6 0 10 18 1 10 15 16 0 3 1 12 -42 17 10 18 3 13 1 51 0 19 6 0 10 15 16 0 3 1 12 -556 17 2 6 4 1 1 31 6 0 10 15 16 0 3 1 12 -404 17 10 6 0 10 18 1 10 15 16 0 3 1 12 -42 17 10 18 3 13 1 74 0 20 0 21 0 22 0 23 0 24 0 25 0 26 0 5 10 15 3 1 0 27 1 26 8 1 0 10 6 0 10 18 24 10 18 23 6 0 10 0 8 10 11 2 19 0 7 0 6 0 10 8 1 0 10 18 19 10 18 12 2 6 1 -38 1 4 4 1 0 28 17 13 1 81 0 29 0 30 6 0 10 15 16 0 3 1 12 -683 17 2 6 4 1 1 59 0 30 6 0 10 18 2 2 6 6 0 1 46 0 30 4 0 2 36 6 0 10 18 0 10 15 16 0 3 1 12 -51 17 10 6 0 10 18 1 10 15 16 0 3 1 12 -66 17 10 18 3 1 6 0 30 0 1 13 1 85 0 31 0 32 0 33 0 34 0 35 6 0 10 15 16 0 3 1 12 -770 17 2 6 6 1 1 57 6 0 10 18 1 10 15 16 0 3 1 12 -790 17 2 15 6 0 10 18 0 10 6 1 10 18 3 1 28 6 0 10 18 0 10 6 0 10 18 1 10 6 1 10 15 16 0 3 2 12 -76 17 10 18 3 13 1 54 0 36 0 37 6 1 10 15 16 0 3 1 12 -849 17 2 6 4 1 1 32 6 0 10 6 1 10 18 0 10 11 1 19 8 6 0 10 6 1 10 18 1 10 15 16 0 3 2 12 -48 17 13 1 46 0 38 6 0 10 15 16 0 3 1 12 -901 17 2 6 0 5 1 26 0 39 6 0 10 18 1 10 15 16 0 3 1 12 -32 17 10 0 8 10 11 2 19 0 13 1 80 0 40 0 11 0 12 0 41 6 1 10 18 34 2 6 4 1 1 9 0 42 10 11 1 19 10 6 1 10 15 16 0 3 1 12 -971 17 2 6 4 1 1 36 6 0 10 6 1 10 18 0 10 11 1 19 8 10 6 0 10 6 1 10 18 1 10 15 16 0 3 2 12 -71 17 10 18 3 13 1 121 0 43 0 44 0 11 0 12 0 13 0 45 6 2 10 18 34 2 11 0 45 6 0 10 18 35 1 4 4 1 10 15 16 0 3 1 12 -774 17 2 11 0 46 10 11 1 19 10 1 4 4 1 1 52 6 0 10 15 16 0 3 1 12 -1079 17 2 6 6 1 1 34 6 0 10 18 1 10 8 1 0 10 6 1 10 6 0 10 18 0 10 11 2 19 8 10 15 16 1 3 2 12 -46 17 13 6 2 10 6 1 10 15 16 1 3 2 12 -61 17 13 1 121 0 47 0 48 0 11 0 12 0 13 0 45 6 2 10 18 34 2 11 0 45 6 0 10 18 35 1 4 4 1 10 15 16 0 3 1 12 -895 17 2 11 0 49 10 11 1 19 10 1 4 4 1 1 52 6 1 10 15 16 0 3 1 12 -1200 17 2 6 6 0 1 34 8 1 0 10 6 1 10 18 0 10 6 0 10 6 1 10 18 1 10 15 16 1 3 2 12 -41 17 10 11 2 19 8 13 6 1 10 6 2 10 15 16 1 3 2 12 -61 17 13 1 107 0 50 0 30 6 0 10 18 34 10 15 16 0 3 1 12 -995 17 2 11 0 51 10 11 1 19 10 1 77 0 30 6 0 10 15 16 0 3 1 12 -1298 17 2 11 0 52 10 11 1 19 10 1 53 0 30 6 0 10 18 1 10 15 16 0 3 1 12 -1325 17 2 9 6 0 10 18 0 1 28 0 30 4 0 2 18 6 0 10 18 1 10 15 16 0 3 1 12 -95 17 1 6 0 30 0 1 13 1 140 0 53 0 11 0 12 0 41 6 0 10 18 35 2 6 4 1 1 9 0 54 10 11 1 19 10 0 11 0 12 0 41 6 1 10 18 34 2 6 4 1 1 9 0 55 10 11 1 19 10 1 76 6 0 10 15 16 0 3 1 12 -1426 17 2 6 4 1 1 58 0 24 0 25 0 26 6 0 10 18 0 10 6 0 10 18 1 10 15 16 1 3 1 12 -40 17 10 15 3 2 8 2 0 10 6 0 10 11 1 19 8 2 12 6 0 10 6 1 10 18 3 1 4 6 1 17 13 6 1 10 15 16 1 3 1 12 -82 17 13 1 243 0 56 0 11 0 12 0 41 6 1 10 18 34 2 6 4 1 1 9 0 57 10 11 1 19 10 1 203 0 30 6 0 10 15 16 0 3 1 12 -1544 17 2 6 4 1 1 183 0 30 6 0 10 18 1 10 15 16 0 3 1 12 -1566 17 2 6 6 0 1 161 0 30 4 0 2 151 0 24 0 25 0 26 6 0 10 18 0 10 6 0 10 18 1 10 15 3 2 0 58 14 4 1 18 8 3 0 10 6 0 10 8 1 0 10 11 2 19 8 13 10 6 1 10 15 16 0 3 2 12 -267 17 10 15 16 1 3 1 12 -108 17 10 0 58 6 0 10 14 4 1 27 8 3 0 10 6 0 10 8 1 0 10 11 2 19 8 10 15 16 0 3 1 12 -1397 17 13 10 6 1 10 15 16 0 3 2 12 -323 17 10 15 16 1 3 1 12 -164 17 10 18 3 10 0 58 0 1 10 15 16 0 3 2 12 -963 17 10 15 16 0 3 2 12 -972 17 17 1 6 0 30 0 1 13 6 1 10 15 16 1 3 1 12 -209 17 13 1 80 6 2 10 15 16 0 3 1 12 -1757 17 2 6 6 1 1 62 0 24 0 25 0 26 6 2 10 18 0 10 15 3 1 8 1 0 10 8 1 0 10 8 1 1 10 6 0 10 11 2 19 8 2 7 8 1 1 1 4 6 0 10 8 1 2 10 18 1 10 15 16 0 3 3 12 -73 17 17 13 1 28 0 59 6 0 10 6 1 10 18 0 10 6 1 10 18 1 10 15 16 0 3 3 12 -102 17 13 1 108 0 60 0 11 0 12 0 41 6 0 10 18 34 2 6 4 1 1 9 0 61 10 11 1 19 10 1 68 0 30 6 0 10 15 16 0 3 1 12 -1895 17 2 6 4 1 1 48 0 30 6 0 10 18 0 10 8 1 1 10 18 10 2 6 4 0 1 28 0 30 4 0 2 18 6 0 10 18 1 10 15 16 1 3 1 12 -56 17 1 6 0 30 0 1 13 6 0 10 15 16 1 3 1 12 -74 17 13 1 66 0 62 0 11 0 12 0 13 6 0 10 18 34 10 15 16 0 3 1 12 -1705 17 2 11 0 63 10 11 1 19 10 1 4 4 1 14 4 1 11 6 1 10 6 0 10 18 3 13 10 4 1 10 6 0 10 15 16 0 3 3 12 -1008 17 13 1 179 0 64 0 11 0 12 0 13 6 0 10 18 34 10 15 16 0 3 1 12 -1771 17 2 11 0 65 10 11 1 19 10 1 4 4 1 0 24 0 25 0 26 4 1 10 15 3 1 0 66 0 67 8 1 0 10 18 34 10 15 16 0 3 1 12 -1815 17 2 11 0 68 10 11 1 19 10 1 89 8 1 0 5 2 1 61 4 2 10 18 0 5 3 4 2 10 18 1 5 2 0 11 0 12 0 13 6 0 10 4 3 10 15 16 0 3 2 12 -289 17 10 15 16 0 3 1 12 -1876 17 2 14 4 3 10 6 0 10 18 3 7 0 1 4 4 1 4 2 10 15 16 0 3 1 12 -2182 17 2 6 4 1 1 4 1 -76 0 28 6 0 10 15 16 0 3 1 12 -238 17 17 13 1 108 0 69 0 11 0 12 0 41 6 0 10 18 34 2 6 4 1 1 9 0 70 10 11 1 19 10 1 65 6 0 10 15 16 0 3 1 12 -2246 17 2 6 4 1 1 47 8 1 1 10 6 0 10 18 0 10 18 10 2 6 6 1 1 29 6 0 10 18 1 10 0 39 6 1 10 0 8 10 11 2 19 0 10 15 16 1 3 2 12 -59 17 13 6 0 10 0 5 10 15 16 1 3 2 12 -74 17 13 1 190 0 71 0 11 0 12 0 41 6 0 10 18 34 2 6 4 1 1 9 0 72 10 11 1 19 10 0 11 0 12 0 41 0 45 6 1 10 18 33 2 34 0 45 0 73 0 14 6 1 10 0 5 10 18 11 2 6 4 0 1 12 0 14 6 1 10 0 5 10 18 10 1 4 4 1 2 6 4 1 1 9 0 74 10 11 1 19 10 1 85 0 30 6 0 10 15 16 0 3 1 12 -2418 17 2 11 0 74 10 11 1 19 10 1 60 0 30 0 75 6 1 10 0 5 10 18 10 2 9 6 0 10 18 0 1 39 0 30 4 0 2 29 6 0 10 18 1 10 6 1 10 0 8 10 11 1 19 1 10 15 16 1 3 2 12 -73 17 1 6 0 30 0 1 13 6 0 10 6 1 10 15 16 1 3 2 12 -94 17 13 1 152 0 76 0 11 0 12 0 41 6 0 10 18 34 2 6 4 1 1 9 0 77 10 11 1 19 10 0 78 0 24 0 25 0 26 6 0 10 15 16 0 3 1 12 -1659 17 10 15 3 1 0 78 0 24 0 25 0 26 6 0 10 18 26 10 15 3 1 0 21 0 22 0 23 0 24 0 25 0 26 0 5 10 15 3 1 0 27 1 39 8 1 0 10 6 0 10 8 3 0 10 18 0 10 18 30 8 3 0 10 18 1 9 3 0 6 0 10 0 8 10 11 2 19 0 7 0 6 0 10 8 2 0 10 18 12 2 6 1 -48 1 4 4 1 0 28 17 6 0 17 17 13 1 141 0 79 0 80 0 11 0 12 0 13 0 81 6 1 10 15 16 0 3 1 12 -1789 17 10 6 2 10 15 16 0 3 1 12 -1801 17 10 18 10 10 15 16 0 3 1 12 -2425 17 2 11 0 82 10 11 1 19 10 1 4 4 1 1 64 6 0 10 15 16 0 3 1 12 -2730 17 2 6 4 1 1 46 8 1 0 10 6 0 10 18 0 10 6 1 10 18 0 10 11 2 19 8 10 6 0 10 18 1 10 6 1 10 18 1 10 15 16 1 3 2 12 -55 17 10 18 3 13 6 1 10 6 2 10 15 16 1 3 2 12 -73 17 13 1 18 0 83 0 84 10 11 1 15 16 0 3 1 12 -2800 17 13 1 19 0 85 6 0 10 18 1 10 15 16 0 3 1 12 -2832 17 13 1 128 0 86 0 87 0 24 0 25 0 26 6 0 10 15 16 0 3 1 12 -37 17 10 15 3 1 0 14 6 0 2 6 4 0 1 23 0 14 8 1 1 10 8 1 0 10 15 16 0 3 1 12 -2857 17 10 18 10 2 45 8 1 0 10 8 1 1 10 8 1 2 10 18 3 10 6 0 2 6 4 1 1 14 8 1 0 10 15 16 0 3 1 12 -2720 17 10 18 3 10 18 5 1 25 8 1 0 10 18 1 10 8 1 1 10 8 1 2 10 15 16 0 3 3 12 -121 17 17 13 1 22 6 0 10 6 1 10 6 2 10 15 16 0 3 3 12 -142 17 6 2 13 1 95 0 88 0 11 0 12 0 13 6 0 10 15 16 0 3 1 12 -3004 17 2 22 0 89 10 6 1 10 18 17 10 11 2 19 7 10 11 1 19 10 1 4 4 1 6 1 10 6 0 10 15 16 0 3 1 12 -3022 17 10 18 10 2 15 6 0 10 15 16 0 3 1 12 -2875 17 1 19 6 0 10 18 1 10 6 1 10 15 16 0 3 2 12 -89 17 13 1 50 0 11 0 12 0 13 6 0 10 15 16 0 3 1 12 -278 17 2 11 0 90 10 11 1 19 10 1 4 4 1 6 0 10 18 1 10 6 1 10 15 16 0 3 2 12 -139 17 13 1 86 0 91 0 14 6 0 10 15 16 0 3 1 12 -3145 17 2 6 4 0 1 18 0 14 6 0 10 18 0 10 15 16 0 3 1 12 -3167 17 2 6 4 1 1 42 6 1 10 6 0 10 15 16 0 3 1 12 -3167 17 10 18 10 2 6 4 0 1 19 6 0 10 18 1 10 6 1 10 15 16 0 3 2 12 -80 17 13 1 37 6 0 10 15 16 0 3 1 12 -408 17 2 6 4 1 1 19 6 0 10 18 1 10 6 1 10 15 16 0 3 2 12 -117 17 13 1 99 0 11 0 12 0 13 6 1 10 15 16 0 3 1 12 -3270 17 2 22 0 92 10 6 2 10 18 17 10 11 2 19 7 10 11 1 19 10 1 4 4 1 6 2 10 6 1 10 15 16 0 3 1 12 -3288 17 10 18 10 2 15 6 0 10 6 1 10 18 1 10 18 5 1 25 6 0 10 18 1 10 6 1 10 18 1 10 6 2 10 15 16 0 3 3 12 -93 17 13 1 55 0 93 0 11 0 12 0 13 6 0 10 15 16 0 3 1 12 -552 17 2 11 0 94 10 11 1 19 10 1 4 4 1 6 0 10 6 0 10 18 1 10 6 1 10 15 16 0 3 3 12 -148 17 13 1 16 0 95 6 0 10 15 16 0 3 1 12 -3375 17 13 1 10 0 96 6 0 10 18 1 13 1 155 15 16 0 3 0 12 -640 17 5 4 15 16 0 3 0 12 -650 17 5 5 4 4 10 0 97 10 0 98 10 15 16 0 3 3 12 -504 17 4 4 10 0 99 10 0 100 10 15 16 0 3 3 12 -521 17 4 4 10 0 97 10 0 101 10 15 16 0 3 3 12 -538 17 4 4 10 0 102 10 0 103 10 15 16 0 3 3 12 -555 17 4 5 10 0 104 10 0 105 10 15 16 0 3 3 12 -572 17 4 4 10 0 104 10 4 5 10 15 16 0 3 3 12 -589 17 4 4 10 0 97 10 15 16 0 3 2 12 -486 17 4 4 10 0 102 10 15 16 0 3 2 12 -364 17 4 4 13 0 106 0 107 0 108 4 1 5 6 0 106 0 107 0 108 4 1 5 7 0 106 0 107 0 108 0 109 5 8 0 106 0 107 0 108 4 1 5 9 0 106 0 107 0 108 4 1 5 10 1 19 0 110 0 111 6 0 5 6 0 112 5 7 0 5 5 9 13 1 13 0 113 0 5 5 9 0 109 5 8 13 1 13 0 114 0 115 5 9 0 116 5 8 13 1 25 0 117 4 6 10 0 39 4 7 10 0 8 10 11 2 19 0 5 7 10 18 29 13 1 73 0 118 4 8 10 0 109 10 18 9 2 32 15 16 0 3 0 12 -42 17 10 0 119 10 18 7 10 15 16 0 3 0 12 -57 17 10 11 2 19 0 1 30 15 16 0 3 0 12 -72 17 10 15 16 0 3 0 12 -81 17 10 0 119 10 18 7 10 11 2 19 0 13 1 46 0 120 0 24 0 25 0 26 15 16 0 3 0 12 -111 17 10 15 3 1 6 0 10 0 121 10 18 8 10 6 0 10 0 122 10 11 2 19 4 10 18 3 17 13 1 121 0 123 0 11 0 12 0 13 0 75 4 9 10 4 8 10 0 109 10 18 9 2 6 0 5 1 4 0 115 10 18 10 2 32 15 16 0 3 0 12 -183 17 5 10 4 8 10 0 109 10 18 9 2 6 0 119 1 4 0 112 5 9 1 4 4 1 0 8 10 4 10 10 4 8 10 0 109 10 18 9 2 16 0 124 4 9 10 0 8 10 11 1 19 1 1 14 0 39 4 9 10 0 8 10 11 2 19 0 5 9 10 18 8 10 11 2 19 4 13 1 106 0 125 0 24 0 25 0 26 0 5 10 15 3 1 0 21 0 22 0 23 0 24 0 25 0 26 0 5 10 15 3 1 0 27 1 46 8 1 0 10 0 8 10 18 7 9 1 0 8 1 0 10 15 16 0 3 0 12 -178 17 10 11 2 19 0 9 1 0 6 0 10 0 8 10 11 2 19 0 7 0 6 0 10 8 2 0 10 18 12 2 6 1 -55 1 4 4 1 0 28 17 6 0 17 13 1 95 0 126 0 24 0 25 0 26 6 0 10 18 26 10 15 3 1 0 21 0 22 0 23 0 24 0 25 0 26 0 5 10 15 3 1 0 27 1 32 8 1 0 10 6 0 10 15 16 0 3 0 12 -422 17 10 18 30 6 0 10 0 8 10 11 2 19 0 7 0 6 0 10 8 2 0 10 18 12 2 6 1 -41 1 4 4 1 0 28 17 6 0 17 13 1 179 0 127 0 128 0 129 1 98 0 130 0 131 0 132 0 30 0 133 10 6 0 10 18 10 2 12 15 16 0 3 0 12 -497 17 1 69 0 30 0 134 10 6 0 10 18 10 2 12 15 16 0 3 0 12 -494 17 1 47 0 30 0 135 10 6 0 10 18 10 2 12 15 16 0 3 0 12 -443 17 1 25 0 30 4 0 2 15 6 0 10 15 16 0 3 1 12 -189 17 1 6 0 30 0 1 13 0 24 0 25 0 26 15 16 0 3 0 12 -1466 17 10 15 3 1 14 4 1 36 8 1 0 10 6 0 10 18 0 10 6 0 10 18 1 10 15 16 1 3 1 12 -139 17 10 15 16 0 3 3 12 -1342 17 13 10 8 1 0 10 15 16 0 3 2 12 -3485 17 6 0 17 13 0 136 0 106 0 107 0 108 0 137 5 11 1 68 0 138 0 139 0 140 0 14 6 0 10 15 16 0 3 1 12 -4359 17 2 6 4 0 1 42 0 14 6 0 10 18 0 10 0 141 10 18 9 2 6 4 0 1 23 0 14 0 75 6 0 10 15 16 0 3 1 12 -3508 17 10 4 11 10 18 10 13 1 71 0 142 0 143 0 144 0 45 6 0 10 15 16 0 3 1 12 -84 17 2 17 0 45 6 1 10 15 16 0 3 1 12 -99 17 1 4 4 1 2 23 6 0 10 6 1 10 6 2 10 11 3 15 16 0 3 1 12 -4454 17 1 9 0 145 10 11 1 19 10 13 1 23 0 146 0 147 0 141 10 6 0 10 11 2 15 16 0 3 1 12 -4486 17 13 1 37 0 148 0 45 6 0 10 15 16 0 3 1 12 -174 17 2 17 0 45 6 0 10 18 0 10 0 141 10 18 9 1 4 4 1 13 1 64 0 149 0 150 0 45 6 0 10 15 16 0 3 1 12 -213 17 2 26 0 45 6 0 10 15 16 0 3 1 12 -66 17 10 15 16 0 3 1 12 -4301 17 1 4 4 1 2 9 6 0 10 18 0 1 9 0 151 10 11 1 19 10 13 1 70 0 152 0 150 0 45 6 0 10 15 16 0 3 1 12 -277 17 2 26 0 45 6 0 10 15 16 0 3 1 12 -130 17 10 15 16 0 3 1 12 -4365 17 1 4 4 1 2 15 6 0 10 15 16 0 3 1 12 -4616 17 1 9 0 153 10 11 1 19 10 13 1 64 0 154 6 0 10 15 16 0 3 1 12 -343 17 2 41 6 0 10 15 16 0 3 1 12 -194 17 2 15 6 0 10 15 16 0 3 1 12 -4667 17 1 13 6 0 10 15 16 0 3 1 12 -4658 17 1 9 0 155 10 11 1 19 10 13 1 7 0 156 4 1 13 1 335 0 157 0 75 6 2 10 0 5 10 18 10 2 37 6 0 10 15 16 0 3 1 12 -4769 17 2 15 6 3 10 15 16 0 3 1 12 -300 17 1 9 0 158 10 11 1 19 10 1 285 0 78 0 24 0 25 0 26 0 124 6 2 10 0 8 10 11 1 19 1 10 15 3 1 0 78 0 24 0 25 0 26 0 75 0 5 10 0 8 10 8 1 1 10 6 0 10 18 8 10 11 2 19 4 10 18 10 10 15 3 1 8 2 0 10 15 16 0 3 1 12 -4866 17 2 86 6 0 2 42 4 1 10 8 2 1 10 8 1 0 10 8 2 3 10 15 16 0 3 4 12 -148 17 10 4 1 10 4 1 10 15 16 0 3 3 12 -499 17 1 40 4 1 10 4 1 10 8 2 1 10 8 1 0 10 8 2 3 10 15 16 0 3 4 12 -191 17 10 4 1 10 15 16 0 3 3 12 -539 17 1 124 6 0 2 62 8 2 0 10 15 16 0 3 1 12 -426 17 10 8 2 1 10 8 1 0 10 8 2 3 10 15 16 0 3 4 12 -242 17 10 8 2 0 10 15 16 0 3 1 12 -396 17 10 4 1 10 15 16 0 3 3 12 -603 17 1 60 8 2 0 10 15 16 0 3 1 12 -486 17 10 8 2 0 10 15 16 0 3 1 12 -435 17 10 8 2 1 10 8 1 0 10 8 2 3 10 15 16 0 3 4 12 -315 17 10 4 1 10 15 16 0 3 3 12 -663 17 17 17 13 1 106 0 159 6 0 10 15 16 0 3 1 12 -587 17 2 15 6 0 10 15 16 0 3 1 12 -429 17 1 77 0 24 0 25 0 26 15 16 0 3 0 12 -1291 17 10 15 3 1 0 75 0 8 10 6 0 10 18 10 2 25 8 1 0 10 15 16 0 3 1 12 -543 17 10 15 16 0 3 1 12 -76 17 1 23 8 1 0 10 15 16 0 3 1 12 -630 17 10 15 16 0 3 1 12 -99 17 17 13 0 106 0 107 0 108 4 1 5 12 0 136 0 106 0 107 0 108 0 160 5 13 1 57 0 161 6 0 10 6 1 10 18 10 2 24 0 162 10 6 0 10 6 1 10 0 1 10 18 3 10 18 3 10 18 3 1 22 0 163 10 6 0 10 6 1 10 0 1 10 18 3 10 18 3 10 18 3 13 1 74 0 164 6 0 10 6 1 10 11 1 19 1 10 15 16 0 3 1 12 -5035 17 10 4 13 10 18 12 2 24 0 162 10 6 0 10 6 1 10 0 1 10 18 3 10 18 3 10 18 3 1 22 0 163 10 6 0 10 6 1 10 0 1 10 18 3 10 18 3 10 18 3 13 1 9 0 165 4 1 5 12 13 1 29 0 166 14 4 1 10 6 0 10 11 0 19 8 13 10 4 12 10 15 16 0 3 2 12 -4536 17 13 0 167 0 24 0 25 0 26 15 16 0 3 0 12 -650 17 10 15 3 1 6 0 10 0 8 10 0 168 10 0 100 10 15 16 0 3 4 12 -667 17 7 0 6 0 10 15 16 0 3 1 12 -885 17 10 15 16 0 3 1 12 -830 17 10 15 16 0 3 1 12 -769 17 10 0 100 10 15 16 0 3 2 12 -247 17 10 11 1 19 9 6 0 10 0 8 10 0 137 10 0 169 10 15 16 0 3 4 12 -735 17 7 0 6 0 10 0 8 10 0 8 10 0 170 10 15 16 0 3 4 12 -757 17 7 0 6 0 10 0 168 10 0 98 10 0 171 10 15 16 0 3 4 12 -779 17 7 0 6 0 10 15 16 0 3 1 12 -997 17 10 15 16 0 3 1 12 -1006 17 10 15 16 0 3 1 12 -951 17 10 15 16 0 3 1 12 -890 17 10 0 169 10 15 16 0 3 2 12 -368 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -988 17 10 15 16 0 3 1 12 -927 17 10 0 170 10 15 16 0 3 2 12 -405 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -1089 17 10 15 16 0 3 1 12 -1098 17 10 15 16 0 3 1 12 -1107 17 10 15 16 0 3 1 12 -1052 17 10 15 16 0 3 1 12 -1125 17 10 15 16 0 3 1 12 -1000 17 10 0 171 10 15 16 0 3 2 12 -478 17 10 11 1 19 9 6 0 10 11 1 19 9 0 172 10 15 16 0 3 1 12 -2070 17 15 16 0 3 0 12 -2059 17 6 0 10 15 16 0 3 1 12 -648 17 10 0 100 10 15 16 0 3 2 12 -532 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -676 17 10 0 169 10 15 16 0 3 2 12 -560 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -704 17 10 0 169 10 15 16 0 3 2 12 -588 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -732 17 10 0 171 10 15 16 0 3 2 12 -616 17 10 11 1 19 9 6 0 10 15 16 0 3 1 12 -760 17 10 0 169 10 15 16 0 3 2 12 -644 17 17 20 NIL)
#(T NIL "Проверка на пустое значение" "Функция создания списка" "Абсолютное значение числа" 0 "Логическое отрицание" "Получение бита с номером bit у числа num" 1 "(e v) -> ((equal val e) v)" "(otherwise v) -> (t v)" "Условный неполный оператор" "test - условие" "body - список выражений по истине" "оператор 'или' для произвольного количества выражений" "case: invalid condition" OTHERWISE EQUAL "Получение списка переменных для let" "Получение списка значений для let" "Печать строки" "Цикл for, переменная var от start до end - 1" "body - тело цикла" "(for i 0 10 (seta arr i i))" "Блок локальных переменных" "(let ((x 0)
         (y 0))
        (+ x y))" "((lambda (x y) 
       (+ x y)) 0 0)" "Цикл while" NIL "Делает копию объекта (кроме чисел, массивов и строк)" "Условный оператор cond" "объединение двух списков (1 . (2 . nil)) (a . (b . nil))" "(append '(1 2) '(a b))" "(1 . (append (2) '(a b)))" "(1 2 . (a b))" "(1 2 a b)" "Применяет функцию f к каждому элементу списка list" "(app '(lambda (x) (set-hash h x nil)) '(x y z))" "длина списка list" "Инкремент значения" "Применяет функцию f к каждому элементу списка list и возвращает новый список" "body - список выражений по лжи" "map: incorrect arguments" "Левоассоциативная свертка (foldl):" "(f ... (f (f start elem_1) elem_2) ... elem_n)" "оператор 'и' для произвольного количества выражений" "foldl: incorrect arguments" "Правоассоциативная свертка (foldr):" "(f elem_1 (f elem_2 ... (f elem_n start) ... ))" "foldr: incorrect arguments" "Найти последний элемент списка" "last: not list" "last: empty list" "Остаются только те элементы списка list, для которых предикат pred с одним параметров возвращает t" "filter: not function in argument" "filter: incorrect list" "Быстрая сортировка списка list по предикату pr (2 параметра)" "sort: incorrect list" "Объединение произвольного количества списков. Если нет аргументов, возвращает nil." "Возвращает минимальный элемент списка по предикату. Предикат pred принимает два элемента списка и возвращает T, если первый элемент меньше второго" "Предикат - элемент elem содержится в списке list" "contains: incorrect list" "Переворачивает список" "reverse: not list" "Удаляет повторяющиеся элементы из списка" "remove-dupl: incorrect arguments" "Вариант app, обходит список с итерационной переменной" "(dolist (x list) (setq a x) (setq b x))" "dolist: incorrect list" "Находит индекс элемента element в списке list." "list-search: incorrect list" "Получает n-й элемент списка list" "nth: incorrect list" "Больше или равно" "nth: invalid index" "Равно" "Преобразование списка в массив" "list-to-array: incorrect list" "Создаёт блок из локальных переменных, которые могут использовать друг друга при задании начального значения" "Соединить два списка list1 и list2 с помощью функции от 2-х аргументов f" "Списки должны иметь одинаковую длину" "Не равно" "zip-with: lists have different length" "Создание пустой хэш-таблицы (hash))" HASH "Проверяет hash на пустоту" "Добавление или изменение значения val по ключу key в таблице hash" "(hash (key.val) (key2.val2))" "Возвращает значение по ключу key из таблицы hash" "get-hash: no key " "get-hash: empty hash" "Проверяет есть ли ключ key в таблице hash" "remove-key: no key " "Удаляет ключ key в таблице hash, без проверки вхождения" "remove-key: empty hash" "Вернуть первый элемент hash" "Вернуть значение элемента el" X 5 Y 10 25 Z 35 TEST ALPHA "Создаёт новый глобальный символ. (defvar имя значение)" "Если var - символ, то устанавливает его значение" "Если var - (slot obj key), то устанавливает значение по ключу" BIG "Устанавливает источник для чтения байт" "param: arr - источник" -1 "Устанавливает порядок байт на старший впереди" "Устанавливает порядок байт на младший впереди" 7 LITTLE "Возвращает очередной байт в виде числа" "Возвращает очередные два байта в виде числа" 8 "Возвращает пару из двух значений по 4 бита" 4 15 "Читает один бит из источника" "Декремент значения" "Читает n бит из источника" "Прочесть массив длиной num байт" "Читает структуру по шаблону" "Возвращает хэш-таблицу" "Шаблон: ((accuracy . byte) (height . word) (width . word) (other . bits4) (array . 16))" "(setq k 10)" "(case k ((1 2)(2 3)(otherwise 4)))" "(cond ((equal k 1) 2)
         ((equal k 2) 3)
         (t 4))" BYTE WORD BITS4 "Создать константу" 3 "Проверка узла t1 на корректность" "nil - корректное дерево" "Узел и лист корректные, если они состоят из трех элементов" LEAF "Создать дерево с поддеревом t1 - слева, t2 - справа" "Элементами дерева могут являться узлы и листья" "node (left right val) - узел, первый и второй элементы являются соответствующими поддеревьями, третий элемент - значение узла, которое может быть nil или любым объектом" "make-tree: try to make an incorrect node" "Создать лист со значением val" "leaf (nil nil val) - лист, не имеет поддеревьев, третий элемент значение узла, которое может быть nil или любым объектом" "Является ли t1 листом" "Получение левого поддерева узла t1" "Доступен только узлу" "left-tree: invalid operation" "Получение правого поддерева узла t1" "right-tree: invalid operation" "Получение значения узла t1" "tree-get-val: try to get val of an incorrect obj" "Создать пустое дерево Хаффмана" "Добавить в дерево huff значение val длиной size по коду code" "huff-add: invalid code" "Декодирование данных из двоичного потока, используя заданную таблицу Хаффмана" 0.000001 "Проверка на равенство результата res и эталона res2" OK FAIL "Проверка на равенство вещественных значений res и эталона res2" "Новый драйвер тестов с именем name" "Запуск всех тестов в модуле unit" "-------------TEST-------------" 2 20 OBJ G #(73 17))
14
