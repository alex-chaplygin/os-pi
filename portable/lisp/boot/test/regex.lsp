; Тесты обработчика регулярных выражений
(print "-----Regex handler tests-----")

(defun test-error (regex ref-error)
  (let ((chars (explode (concat "Expected: " ref-error ", got: "))))
    (dolist (chr chars)
      (putchar chr))
    (print (check-correct regex))))

(test-error "" "Empty regex")
(test-error "t^" "Unescaped ^ not in the beginning of regex")
(test-error "$$" "Unescaped $ not in the end of regex")
(test-error "ab*?f" "? Preceding token is not quantifiable")
(test-error "asd.*[a]* * *+" "+ Preceding token is not quantifiable")
(test-error "[ab]+. +%+ +* ?" "* Preceding token is not quantifiable")
(test-error "af[]" "Empty square brackets")
(test-error "a%[bc]" "Missing opening square bracket")
(test-error "^ab[xyz$" "Missing closing square bracket")
(test-error "^a[ab[dc]t]&" "Nested square brackets")
(print (assert (match "offsabc4de" "abc4d") "abc4d"))
(print (assert (match "1a---b 4d_" "b.4d.") "b 4d_"))
(print (assert (match "bcdef" "^b..e.$") "bcdef"))
(print (assert (match "abcd" "^bcd") NIL))
(print (assert (match "abcd" "abc$") NIL))
(print (assert (match "ab" "^") ""))
(print (assert (match "" "^$") ""))
(print (assert (match "txt" "^$") NIL))
(print (assert (match "a" ".") "a"))
(print (assert (match "" ".") NIL))
(print (assert (match "aaaatd" "a*t") "aaaat"))
(print (assert (match "etd" "a*t") "t"))
(print (assert (match "test" "t.*t") "test"))
(print (assert (match "test2" "t.*es.*t2") "test2"))
(print (assert (match "string" ".*") "string"))
(print (assert (match "string" ".*" T) ""))
(print (assert (match "taaaabw" "a*b.$") "aaaabw"))
(print (assert (match "test    string 123" "test * str.*2") "test    string 12"))
(print (assert (match "ABCXYZ" "^A.*Z$" NIL) "ABCXYZ"))
(print (assert (match "abcktrrrq" ".+ktr+" NIL) "abcktrrr"))
(print (assert (match "abcktrrrq" ".+ktr+" T) "abcktr"))
(print (assert (match "Hello" "Hel+o") "Hello"))
(print (assert (match "heo" "hel+o") NIL))
(print (assert (match "Helo" "Hel?lo") "Helo"))
(print (assert (match "привет" "при.*т") "привет")) ; ограниченная поддержка юникода
(print (assert (match "привет" "прив.т") "привет")) ; выведет NIL (рассматривает русские буквы как 2 байта символов)
(print (assert (match "привет" "прив..т") NIL)) ; а так выведет "привет"
(print (assert (match "lisp" "lis[tpk]") "lisp"))
(print (assert (match "lisb" "lis[tpk]") NIL))
(print (assert (match "awwaawwt" "[aw]*") "awwaaww"))
(print (assert (match "dksst__" "[aws]?[tds][tks]+") "dksst"))
(print (assert (match "num 5350 test" "[0123456789]+") "5350"))
(setq time_re "[012345][0123456789]:[012345][0123456789]")
(setq time_re "[012345]?[0123456789]:[012345][0123456789]") 
(print (assert (match "time: 27:15" time_re) "27:15"))
(print (assert (match "time: 62:15" time_re) NIL))
(print (assert (match "time: 1:27" time_re) "1:27"))
(print (assert (match "time: 27:1" time_re) NIL))
(print (assert (match "https://swsu.ru/faq" "https?://[w%.]*swsu%.ru") "https://swsu.ru"))
(print (assert (match "https://swsu_ru/faq" "https?://[w%.]*swsu%.ru") NIL))
(print (assert (match "https://do.swsu.ru/faq" "https?://[w%.]*swsu%.ru") NIL))
(print (assert (match "http://www.swsu.ru/faq" "https?://[w%.]*swsu%.ru") "http://www.swsu.ru"))
(setq simple_email_re "^[abcdef-]+@[abcdef-]+%.[abcdef]*")
(setq simple_email_re "^[abcdefghij-]+@[abcdefghij-]+%.[abcdefghij]+") 
(print (assert (match "abc@af-af.de" simple_email_re) "abc@af-af.de"))
(print (assert (match "abc@af-af,de" simple_email_re) NIL))
(print (assert (match "aa@.de" simple_email_re) NIL))
(print (assert (match "aa@af-af" simple_email_re) NIL))
(print (assert (match "*****" "%*+") "*****"))
(print (assert (match "...." "%.*") "...."))
(print (assert (match ".abc" "%.*") "."))
(print (assert (match "%%abc" "%%*") "%%"))
(print (assert (match "abc$d" "abc%$") "abc$"))
(print (assert (match "[][q[wx" "%[%]%[[qwe%[]+") "[][q[w"))
(print (assert (match "a*t" "a%.?t") NIL))
(print (assert (match "at" "a%.?t") "at"))
(print (assert (match "test" "t.*t") "test"))
(print (assert (test "string" ".*") T))
(print (assert (test "bcdef" "^b..e.$") T))
(print (assert (test "abcd" "^bcd") NIL))

