"--------------------TEST--------------------"
(assert (make-tree '(nil nil 2) '(nil nil 4) 2) '((nil nil 2) (nil nil 4) 2))
(assert (make-tree '(nil nil 7) '(nil nil 6) NIL) '((nil nil 7) (nil nil 6) NIL))
(assert (make-tree '((nil nil 2) (nil nil 4) 2) '(nil (nil nil 4) nil) 3) '(((nil nil 2) (nil nil 4) 2) (nil (nil nil 4) nil) 3))
;(assert (make-tree '(2 3) '(nil nil 4) 2) -1)
(assert (make-leaf 5) '(nil nil 5))
(assert (make-leaf '(1 2 3)) '(nil nil (1 2 3)))
(defvar temp (make-tree '(nil nil 4) '((2 3 4) nil nil) 5))
(assert (is-leaf temp) nil)
(assert (is-leaf (make-leaf 4)) t)
(assert (left-tree temp) '(nil nil 4))
(assert (right-tree temp) '((2 3 4) nil nil))
(assert (left-tree (right-tree temp)) '(2 3 4))
;(assert (left-tree (left-tree (left-tree temp))) -1)
