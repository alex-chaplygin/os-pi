(add-to-list 'load-path (expand-file-name "~/doxymacs/"))
(require 'doxymacs)
(global-set-key [f1] 'doxymacs-insert-file-comment)
(global-set-key [f2] 'doxymacs-insert-function-comment)
(global-set-key [f3] 'doxymacs-insert-member-comment)(global-set-key (kbd "<f5>") 'user-save-and-make-all)

;;general compile function call "make all"
(defun user-save-and-make-all ()
  "save and call compile as make all"
  (interactive)
  (save-buffer)
  (compile "make all")
  (message "make all executed!"))
(show-paren-mode t)

(defun do-all-tests()
  (interactive)
  (save-some-buffers (lambda () t))
  (compile "make test"))

(defun do-cur-test()
  (interactive)
  (save-some-buffers (lambda () t))
  (let* ((buf (file-name-base (buffer-file-name (window-buffer (minibuffer-selected-window)))))
	 (buf2 (concat "/tmp/" buf)))
    (compile (concat "make " buf2))
    (sit-for 2)
    (shell-command buf2)))

(defun do-compile-run()
  (interactive)
  (save-some-buffers (lambda () t))
  (let* ((buf (file-name-base (buffer-file-name (window-buffer (minibuffer-selected-window))))))
    (compile (concat "gcc " buf ".c && ./a.out"))))

(defun make-run()
  (interactive)
  (compile "make run"))

(defun do-coverage()
  (interactive)
  (compile "make coverage"))

(global-set-key [f4] 'do-all-tests)
(global-set-key [f5] 'do-compile-run)
(global-set-key [f10] 'do-coverage)

(define-key input-decode-map (kbd "C-c") (kbd "M-w"))
(global-set-key "\C-d" "\C-a\C- \C-n\M-w\C-y")
(global-set-key (kbd "C-v") 'yank)
(global-set-key (kbd "C-z") 'undo)
(global-set-key (kbd "C-w") 'other-window)
(global-set-key (kbd "C-r") 'make-run)
(global-set-key (kbd "C-;") 'comment-region)
(global-set-key (kbd "C-u") 'uncomment-region)

(setq-default c-basic-offset 4)

(delete-selection-mode 1)

(set-default 'cursor-type 'bar)
